import argparse
import base64
import os
import time
from io import BytesIO

from langchain.llms import Ollama
from PIL import Image

from ollama_helpers import init_model


def convert_image_to_base64(pil_image):
    """
    Convert a PIL Image to base64 encoded string.

    Args:
        pil_image (PIL.Image.Image): PIL Image object to convert.

    Returns:
        str: Base64 encoded image string.
    """
    image_format = pil_image.format
    output_format = "png" if image_format == "PNG" else "jpeg"

    buffered = BytesIO()
    pil_image.save(buffered, format=output_format)
    img_str = base64.b64encode(buffered.getvalue()).decode("utf-8")
    return img_str


def init_chain(file_path, model):
    pil_image = Image.open(file_path)
    image_b64 = convert_image_to_base64(pil_image)
    return model.bind(images=[image_b64])


def run(file_path, question, model):
    """
    Ask a question related to an image using the Ollama model.

    Args:
        file_path (str): Path to the image file.
        question (str): Question to ask about the image.
        model (Ollama): Initialized Ollama model instance.

    Returns:
        str: Response generated by the model.
    """
    return image_chain.invoke(question)


def debug(file_path, question):
    print('-'*50)
    print(f"loading model\t", end='')
    start_time = time.time()
    model = init_model("bakllava", num_gpu=1, verbose=True)
    end_time = time.time()
    time_taken_ms = (end_time - start_time) * 1000  # Convert to milliseconds
    print(f"{time_taken_ms:.2f} ms")

    print(f"thinking\t", end='')
    start_time = time.time()

    response = run(file_path, question, model)
    end_time = time.time()
    time_taken_ms = (end_time - start_time) * 1000  # Convert to milliseconds
    print(f"{time_taken_ms:.2f} ms")
    print('-'*50)
    print(f"file_path\t{file_path}\nquestion\t{question}\nresponse\t{response}")


def main():
    parser = argparse.ArgumentParser(
        description="Debug Ollama model with image and question"
    )
    parser.add_argument(
        "file_path",
        type=str,
        nargs="?",
        default=os.path.join("data", "test.jpeg"),
        help="Path to the image file",
    )
    parser.add_argument(
        "question",
        type=str,
        nargs="?",
        default="What is the Dollar-based gross retention rate?",
        help="Question to ask about the image",
    )

    args = parser.parse_args()
    debug(args.file_path, args.question)


if __name__ == "__main__":
    main()
